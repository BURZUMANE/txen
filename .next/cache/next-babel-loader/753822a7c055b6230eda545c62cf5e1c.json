{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { postsReducer } from \"../slices/postsSlice\";\nimport { postReducer } from \"../slices/postSlice\";\nexport var getPosts = function getPosts(params) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://simple-blog-api.crew.red/posts/\");\n\n            case 3:\n              data = _context.sent;\n              dispatch(postsReducer.actions.getPosts(data.data));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var deletePosts = function deletePosts(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(id);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios[\"delete\"](\"https://simple-blog-api.crew.red/posts/\".concat(id));\n\n            case 4:\n              data = _context2.sent;\n\n              if (data.status === 200) {\n                console.log(\"post deleted\");\n              }\n\n              dispatch(postsReducer.actions.deletePost(id));\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var createPost = function createPost(body) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.post(\"https://simple-blog-api.crew.red/posts/\", body);\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.status === 201) {\n                console.log(\"POST CREATED\");\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getPost = function getPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id));\n\n            case 3:\n              data = _context4.sent;\n\n              if (data.status === 200) {\n                console.log(\"Got post\");\n                dispatch(postReducer.actions.getPost(data.data));\n              }\n\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/timurzakirov/Desktop/dir/txen/lib/operations/postsOperation.js"],"names":["axios","postsReducer","postReducer","getPosts","params","dispatch","getState","get","data","actions","console","log","deletePosts","id","status","deletePost","createPost","body","post","result","getPost"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA;AAAA,wEAAI,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEXN,KAAK,CAACO,GAAN,CAAU,yCAAV,CAFW;;AAAA;AAExBC,cAAAA,IAFwB;AAG9BH,cAAAA,QAAQ,CAACJ,YAAY,CAACQ,OAAb,CAAqBN,QAArB,CAA8BK,IAAI,CAACA,IAAnC,CAAD,CAAR;AAH8B;AAAA;;AAAA;AAAA;AAAA;AAK9BE,cAAAA,OAAO,CAACC,GAAR;;AAL8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AASP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE;AAAA;AAAA,yEAAI,kBAAOR,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BI,cAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AAD+B;AAAA;AAAA,qBAGVb,KAAK,UAAL,kDACyBa,EADzB,EAHU;;AAAA;AAGvBL,cAAAA,IAHuB;;AAM7B,kBAAIA,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AACDN,cAAAA,QAAQ,CAACJ,YAAY,CAACQ,OAAb,CAAqBM,UAArB,CAAgCF,EAAhC,CAAD,CAAR;AAT6B;AAAA;;AAAA;AAAA;AAAA;AAW7BH,cAAAA,OAAO,CAACC,GAAR;;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAeP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA;AAAA,yEAAI,kBAAOZ,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAETN,KAAK,CAACkB,IAAN,CACnB,yCADmB,EAEnBD,IAFmB,CAFS;;AAAA;AAExBE,cAAAA,MAFwB;;AAM9B,kBAAIA,MAAM,CAACL,MAAP,KAAkB,GAAtB,EAA2B;AACzBJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAR6B;AAAA;;AAAA;AAAA;AAAA;AAU9BD,cAAAA,OAAO,CAACC,GAAR;;AAV8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAcP,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAP,EAAE;AAAA;AAAA,yEAAI,kBAAOR,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAENN,KAAK,CAACO,GAAN,kDACyBM,EADzB,EAFM;;AAAA;AAEnBL,cAAAA,IAFmB;;AAKzB,kBAAIA,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAN,gBAAAA,QAAQ,CAACH,WAAW,CAACO,OAAZ,CAAoBW,OAApB,CAA4BZ,IAAI,CAACA,IAAjC,CAAD,CAAR;AACD;;AARwB;AAAA;;AAAA;AAAA;AAAA;AAUzBE,cAAAA,OAAO,CAACC,GAAR;;AAVyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import axios from \"axios\";\nimport { postsReducer } from \"../slices/postsSlice\";\nimport { postReducer } from \"../slices/postSlice\";\nexport const getPosts = params => async (dispatch, getState) => {\n  try {\n    const data = await axios.get(\"https://simple-blog-api.crew.red/posts/\");\n    dispatch(postsReducer.actions.getPosts(data.data));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deletePosts = id => async (dispatch, getState) => {\n  console.log(id);\n  try {\n    const data = await axios.delete(\n      `https://simple-blog-api.crew.red/posts/${id}`,\n    );\n    if (data.status === 200) {\n      console.log(\"post deleted\");\n    }\n    dispatch(postsReducer.actions.deletePost(id));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createPost = body => async (dispatch, getState) => {\n  try {\n    const result = await axios.post(\n      \"https://simple-blog-api.crew.red/posts/\",\n      body,\n    );\n    if (result.status === 201) {\n      console.log(\"POST CREATED\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getPost = id => async (dispatch, getState) => {\n  try {\n    const data = await axios.get(\n      `https://simple-blog-api.crew.red/posts/${id}`,\n    );\n    if (data.status === 200) {\n      console.log(\"Got post\");\n      dispatch(postReducer.actions.getPost(data.data));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}