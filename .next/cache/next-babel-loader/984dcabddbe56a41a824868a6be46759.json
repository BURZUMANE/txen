{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport { createPost } from \"../../lib/operations/postsOperation\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"25ch\"\n      }\n    }\n  });\n});\nvar initialState = {\n  title: \"\",\n  body: \"\"\n};\nexport default function CreateForm() {\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState(initialState),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log(name, value);\n    setValue(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!value.title.length || !value.body.length) {\n      NotificationManager.warning(\"Fields must contain something\");\n      return;\n    } else {\n      dispatch(createPost(value));\n      setValue(initialState);\n      NotificationManager.success(\"Good job, you might have created a post\");\n    }\n  };\n\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"Title\",\n    multiline: true,\n    rowsMax: 1,\n    value: value.title,\n    name: \"title\",\n    onChange: handleChange,\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"standard-multiline-static\",\n    label: \"Content\",\n    multiline: true,\n    rows: 4,\n    name: \"body\",\n    value: value.body,\n    defaultValue: \"Default Value\",\n    onChange: handleChange,\n    style: {\n      width: \"100%\"\n    }\n  })), __jsx(Button, {\n    variant: \"outlined\",\n    onClick: handleSubmit,\n    style: {\n      width: \"100%\"\n    }\n  }, \"SUBMIT\")), __jsx(NotificationContainer, null));\n}","map":null,"metadata":{},"sourceType":"module"}